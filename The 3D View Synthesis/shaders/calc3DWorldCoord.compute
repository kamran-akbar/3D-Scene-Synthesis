#version 450 compatibility
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

#define WORK_GROUP_SIZE_X 30
#define WORK_GROUP_SIZE_Y 30

uniform float colorCamFocal;

layout(std430, binding = 0) buffer ResampledZs { float resampledZs[]; };
layout(std430, binding = 1) buffer World3DCoord { vec3 world3Dcoord[]; };
layout(local_size_x = WORK_GROUP_SIZE_X, local_size_y = WORK_GROUP_SIZE_Y, local_size_z = 1) in;

void main()
{
	uvec3 size = gl_NumWorkGroups * gl_WorkGroupSize;
	uvec2 gid = gl_GlobalInvocationID.xy;
	uint index = gid.y * size.x + gid.x;
	float z = resampledZs[index];
	float x = gid.x * z / colorCamFocal;
	float y = gid.y * z / colorCamFocal;
	vec3 coord = vec3(x, y, z);
	world3Dcoord[index] = coord;
}